[tool.poetry]
name = "pyseqcol"
version = "0.1.0"
description = "Python client for the upcoming GA4GH seqcol standard: https://seqcol.readthedocs.io/"
authors = ["Sveinung Gundersen <sveinugu@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
keywords = ["genomics", "bioinformatics", "reference genomes", "sequence collections", "GA4GH", "FAIR", "JSON", "PID", "identifiers"]
classifiers = ["Development Status :: 2 - Pre-Alpha", "Framework :: Pydantic", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.10", "Topic :: Software Development :: Libraries"]
packages = [{include = "pyseqcol", from = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.26.0"
pydantic = "<2"
jsoncanon = "^0.2.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-pycharm = "^0.7.0"
pre-commit = "^3.6.0"
mypy = "1.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.yapf]
based_on_style = "google"
align_closing_bracket_with_visual_indent = true
blank_line_before_nested_class_or_def = false
column_limit = 100
indent_dictionary_value = true
join_multiple_lines = true
split_all_comma_separated_values = false
split_all_top_level_comma_separated_values = true
split_before_expression_after_opening_paren = true
split_before_arithmetic_operator = true

[tool.isort]
profile = "google"
force_single_line = false
multi_line_output = 1
src_paths = ["src/omnipy", "tests"]
line_length = 100

[flows]
checkpointing = true

[tool.mypy]
# Adapted from https://quantlane.com/blog/type-checking-large-codebase/

# General

python_version = "3.10"
mypy_path = "src:tests"

ignore_missing_imports = true
follow_imports = "silent"

# Ensure full coverage
#disallow_untyped_calls = true
#disallow_untyped_defs = true
#disallow_incomplete_defs = true
#disallow_untyped_decorators = true
#check_untyped_defs = true

# Restrict dynamic typing
#disallow_any_generics = true
#disallow_subclassing_any = true
#warn_return_any = true

# Know exactly what you're doing
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
warn_unreachable = true
show_error_codes = true

# Explicit is better than implicit
no_implicit_optional = true

# Others
warn_no_return = false
show_column_numbers = true
error_summary = true
verbosity = 0
no_implicit_reexport = true

plugins = [
  "pydantic.mypy"
]

[[tool.mypy.overrides]]
module = "tests.*"
# pytest decorators are not typed
disallow_untyped_decorators = false

[tool.pydantic-mypy]
#init_forbid_extra = true
init_typed = false
warn_required_dynamic_aliases = true

[tool.pytest.ini_options]
addopts = "--tb=native"
testpaths = [
    "tests",
]
